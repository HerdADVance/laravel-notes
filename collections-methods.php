
Remember that all collection methods can be chained to fluently manipulate the underlying array.

Almost every method returns a new Collection instance, allowing you to preserve the original copy of the collection when necessary.

Here's a list of all collection methods. Use the docs to find out more about them:

<?
	all
	average
	avg
	chunk
	chunkWhile
	collapse
	collect
	combine
	concat
	contains
	containsStrict
	count
	countBy
	crossJoin
	dd
	diff
	diffAssoc
	diffKeys
	dump
	duplicates
	duplicatesStrict
	each
	eachSpread
	every
	except
	filter
	first
	firstWhere
	flatMap
	flatten
	flip
	forget
	forPage
	get
	groupBy
	has
	implode
	intersect
	intersectByKeys
	isEmpty
	isNotEmpty
	join
	keyBy
	keys
	last
	macro
	make
	map
	mapInto
	mapSpread
	mapToGroups
	mapWithKeys
	max
	median
	merge
	mergeRecursive
	min
	mode
	nth
	only
	pad
	partition
	pipe
	pipeInto
	pluck
	pop
	prepend
	pull
	push
	put
	random
	reduce
	reject
	replace
	replaceRecursive
	reverse
	search
	shift
	shuffle
	skip
	skipUntil
	skipWhile
	slice
	some
	sort
	sortBy
	sortByDesc
	sortDesc
	sortKeys
	sortKeysDesc
	splice
	split
	splitIn
	sum
	take
	takeUntil
	takeWhile
	tap
	times
	toArray
	toJson
	transform
	union
	unique
	uniqueStrict
	unless
	unlessEmpty
	unlessNotEmpty
	unwrap
	values
	when
	whenEmpty
	whenNotEmpty
	where
	whereStrict
	whereBetween
	whereIn
	whereInStrict
	whereInstanceOf
	whereNotBetween
	whereNotIn
	whereNotInStrict
	whereNotNull
	whereNull
	wrap
	zip
?>
